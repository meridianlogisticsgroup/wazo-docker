#!/usr/bin/env bash
set -x

source /var/lib/wazo/helpers

db_host='postgres'
db_port='5432'
db_name='wazo'
db_username='asterisk'
db_password='secret'
db_uri="postgresql://$db_username:$db_password@$db_host:$db_port"

echo Waiting for postgres...
wait_for_service $db_host $db_port

echo Updating database...
cd /usr/src/wazo-dird
export ALEMBIC_DB_URI=$db_uri/$db_name
alembic -c alembic.ini upgrade head

echo Waiting for key files...
wait_for_file /var/lib/wazo-auth-keys/wazo-dird-key.yml
wait_for_file /var/lib/wazo-auth-keys/wazo-dird-wazo-backend-key.yml
wait_for_file /var/lib/wazo-auth-keys/wazo-dird-conference-backend-key.yml

echo Waiting for ugly hack to be applied on auto-created profiles...
FILE=/opt/venv/lib/python3.9/site-packages/wazo_dird-1.2-py3.9.egg/wazo_dird/plugins/config_service/plugin.py
for CONFIG in CONFERENCE_SOURCE_BODY WAZO_SOURCE_BODY OFFICE_365_SOURCE_BODY GOOGLE_SOURCE_BODY; do
  NEW_CONFIG=$(python - <<EOF
from wazo_dird.plugins.config_service import plugin
config = plugin.${CONFIG}
config.setdefault('auth', {})
config['auth']['host'] = 'auth'
config.setdefault('confd', {})
config['confd']['host'] = 'confd'
print(config)
EOF
  )
  sed -i "s@${CONFIG} =@${CONFIG} = ${NEW_CONFIG}\n${CONFIG}_IGNORED =@" $FILE
done

exec "$@"
